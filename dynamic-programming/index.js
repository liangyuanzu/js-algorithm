// 动态规划思想
/* 
动态规划是 算法设计 中的一种方法
它将一个问题分解成 相互重叠 的子问题, 通过反复求解子问题, 来解决原来的问题
*/

// 场景一: 斐波那契数列
/* 
0 1 1 2 3 5 8 13 21 34 ...

n 为 0 时值为 0,
n 为 1 时值为 1,
n 为 大于1 的数时等于前两数之和
Function = {
  0, n = 0 
  1, n = 1
  Function(n-1) + Function(n-2), n > 1
}

解决
1. 定义子问题: F(n) = F(n-1) + F(n-2)
2. 反复执行: 从 2 循环到 n, 执行上述公式
*/

/* 
动态规划 vs 分而治之
区别: 子问题是否独立, 独立则是分而治之, 重叠则是动态规划
*/
